(()=>{"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(e,n){for(var o=0;o<n.length;o++){var r=n[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,i=function(e,n){if("object"!==t(e)||null===e)return e;var o=e[Symbol.toPrimitive];if(void 0!==o){var r=o.call(e,"string");if("object"!==t(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===t(i)?i:String(i)),r)}var i}var n=function(){function t(e,n,o,r,i,u,c,a,l,s,f){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._title=e,this._link=n,this._likes=o,this._id=r,this._ownerId=i,this._openFullImagePopup=c,this._openDeleteCardPopup=a,this._putLikeApi=l,this._deleteLikeApi=s,this._templateSelector=f,this._content=document.querySelector(this._templateSelector).content.querySelector(".photo-grid__element"),this._myId=u}var n,o;return n=t,(o=[{key:"_getTemplateCard",value:function(){return this._content.cloneNode(!0)}},{key:"likeIsActive",value:function(){this._like.classList.add("photo-grid__like_active")}},{key:"likeIsInactive",value:function(){this._like.classList.remove("photo-grid__like_active")}},{key:"updateCountLikes",value:function(t){this._likesCount.textContent=t}},{key:"removeCard",value:function(){this._newCard.remove()}},{key:"_putLike",value:function(){this._putLikeApi(this._id,this)}},{key:"_deleteLike",value:function(){this._deleteLikeApi(this._id,this)}},{key:"_setEventListeners",value:function(){var t=this;this._like.addEventListener("click",(function(){t._like.classList.contains("photo-grid__like_active")?t._deleteLike():t._putLike()})),this._newCard.querySelector(".photo-grid__delete-button").addEventListener("click",(function(){return t._openDeleteCardPopup(t,t._id)})),this._img.addEventListener("click",(function(){return t._openFullImagePopup(t._title,t._link)}))}},{key:"_setData",value:function(){this._newCard.querySelector(".photo-grid__title").textContent=this._title,this._img.src=this._link,this._img.alt=this._title,this._likesCount.textContent=this._likes.length}},{key:"_checkId",value:function(){var t,e=this;return this._likes.forEach((function(n){t=n._id===e._myId})),t}},{key:"getView",value:function(){return this._newCard=this._getTemplateCard(),this._img=this._newCard.querySelector(".photo-grid__photo"),this._like=this._newCard.querySelector(".photo-grid__like"),this._likesCount=this._newCard.querySelector(".photo-grid__likes-counter"),this._setEventListeners(),this._setData(),this._myId!==this._ownerId&&this._newCard.querySelector(".photo-grid__delete-button").remove(),this._checkId()&&this._like.classList.add("photo-grid__like_active"),this._newCard}}])&&e(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),t}();function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function r(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==o(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===o(i)?i:String(i)),r)}var i}var i=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._config=e,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._formElement.querySelector(this._config.buttonSelector)}var e,n;return e=t,(n=[{key:"_hideInputError",value:function(t){this._formElement.querySelector(".".concat(t.id,"-error")).textContent="",t.classList.remove(this._config.redBorderClass)}},{key:"_showInputError",value:function(t){this._formElement.querySelector(".".concat(t.id,"-error")).textContent=t.validationMessage,t.classList.add(this._config.redBorderClass)}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(t){return!t.validity.valid}))}},{key:"_disableSubmitButton",value:function(){this._buttonElement.classList.add(this._config.inactiveButtonClass),this._buttonElement.disabled=!0}},{key:"_enableSubmitButton",value:function(){this._buttonElement.classList.remove(this._config.inactiveButtonClass),this._buttonElement.disabled=!1}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._disableSubmitButton():this._enableSubmitButton()}},{key:"_setEventListeners",value:function(){var t=this;this._toggleButtonState(),this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"clearErrors",value:function(){var t=this;this._toggleButtonState(),this._inputList.forEach((function(e){t._hideInputError(e)}))}}])&&r(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function u(t){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},u(t)}function c(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==u(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==u(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===u(r)?r:String(r)),o)}var r}var a=function(){function t(e,n){var o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=o,this._container=document.querySelector(n)}var e,n;return e=t,(n=[{key:"renderItems",value:function(t){var e=this;t.forEach((function(t){return e._renderer(t)}))}},{key:"addItem",value:function(t){this._container.prepend(t)}}])&&c(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function l(t){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},l(t)}function s(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==l(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==l(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===l(r)?r:String(r)),o)}var r}var f=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"setEventListeners",value:function(){this._popup.querySelector(".popup__close-button").addEventListener("click",this.close.bind(this)),this._popup.querySelector(".popup__overlay").addEventListener("click",this.close.bind(this))}}])&&s(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function p(t){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},p(t)}function y(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==p(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==p(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===p(r)?r:String(r)),o)}var r}function h(){return h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var o=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=v(t)););return t}(t,e);if(o){var r=Object.getOwnPropertyDescriptor(o,e);return r.get?r.get.call(arguments.length<3?t:n):r.value}},h.apply(this,arguments)}function d(t,e){return d=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},d(t,e)}function v(t){return v=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},v(t)}var b=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&d(t,e)}(u,t);var e,n,o,r,i=(o=u,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=v(o);if(r){var n=v(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===p(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._popupImage=e._popup.querySelector(".popup__img"),e._popupImageTitle=e._popup.querySelector(".popup__img-title"),e}return e=u,(n=[{key:"open",value:function(t,e){this._popupImage.src=e,this._popupImage.alt=t,this._popupImageTitle.textContent=t,h(v(u.prototype),"open",this).call(this)}}])&&y(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(f);function _(t){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_(t)}function m(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==_(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==_(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===_(r)?r:String(r)),o)}var r}function g(){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var o=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=k(t)););return t}(t,e);if(o){var r=Object.getOwnPropertyDescriptor(o,e);return r.get?r.get.call(arguments.length<3?t:n):r.value}},g.apply(this,arguments)}function S(t,e){return S=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},S(t,e)}function k(t){return k=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},k(t)}var w=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&S(t,e)}(u,t);var e,n,o,r,i=(o=u,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=k(o);if(r){var n=k(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===_(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._submit=e,n._popupForm=n._popup.querySelector(".popup__form"),n._inputList=n._popupForm.querySelectorAll(".popup__input"),n._button=n._popupForm.querySelector(".popup__save-button"),n}return e=u,(n=[{key:"_getInputValues",value:function(){var t={};return this._inputList.forEach((function(e){t[e.id]=e.value})),t}},{key:"renderLoading",value:function(t,e){this._button.textContent="".concat(e)}},{key:"setEventListeners",value:function(){var t=this;g(k(u.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(e){e.preventDefault(),t.renderLoading(!0,"Сохранение..."),t._submit(t._getInputValues())}))}},{key:"close",value:function(){g(k(u.prototype),"close",this).call(this),this._popupForm.reset()}}])&&m(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(f);function E(t){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},E(t)}function O(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==E(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==E(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===E(r)?r:String(r)),o)}var r}var P=function(){function t(e){var n=e.nameSelector,o=e.vocationSelector,r=e.avatarSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=document.querySelector(n),this._vocation=document.querySelector(o),this._avatar=document.querySelector(r)}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,vocation:this._vocation.textContent}}},{key:"setUserInfo",value:function(t){this._name.textContent=t.name,this._vocation.textContent=t.about}},{key:"setAvatar",value:function(t){this._avatar.src=t.avatar}}])&&O(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function j(t){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},j(t)}function L(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==j(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==j(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===j(r)?r:String(r)),o)}var r}var C=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.url=e.url,this.headers=e.headers}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return fetch("".concat(this.url,"/users/me"),{headers:this.headers}).then(I)}},{key:"getCardInfo",value:function(){return fetch("".concat(this.url,"/cards"),{headers:this.headers}).then(I)}},{key:"saveUserInfo",value:function(t){return fetch("".concat(this.url,"/users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify({name:t.name,about:t.vocation})}).then(I)}},{key:"setAvatar",value:function(t){return fetch("".concat(this.url,"/users/me/avatar"),{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:t.avatar})}).then(I)}},{key:"createNewCard",value:function(t){return fetch("".concat(this.url,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify({name:t.title,link:t.link})}).then(I)}},{key:"deleteCard",value:function(t){return fetch("".concat(this.url,"/cards/").concat(t),{method:"DELETE",headers:this.headers}).then(I)}},{key:"putLike",value:function(t){return fetch("".concat(this.url,"/cards/").concat(t,"/likes"),{method:"PUT",headers:this.headers}).then(I)}},{key:"deleteLike",value:function(t){return fetch("".concat(this.url,"/cards/").concat(t,"/likes"),{method:"DELETE",headers:this.headers}).then(I)}}])&&L(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function I(t){return t.ok?t.json():Promise.reject(new Error("Ошибка!!!"))}var T={formSelector:".popup__form",inputSelector:".popup__input",buttonSelector:".popup__save-button",inactiveButtonClass:"popup__inactive-button",redBorderClass:"popup__input_red-broder"};function q(t){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},q(t)}function R(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==q(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==q(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===q(r)?r:String(r)),o)}var r}function B(){return B="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var o=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=A(t)););return t}(t,e);if(o){var r=Object.getOwnPropertyDescriptor(o,e);return r.get?r.get.call(arguments.length<3?t:n):r.value}},B.apply(this,arguments)}function x(t,e){return x=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},x(t,e)}function A(t){return A=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},A(t)}var D,U=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&x(t,e)}(u,t);var e,n,o,r,i=(o=u,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=A(o);if(r){var n=A(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===q(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._handleButton=e,n}return e=u,(n=[{key:"open",value:function(t,e){this._card=t,this._id=e,B(A(u.prototype),"open",this).call(this)}},{key:"delete",value:function(){this._handleButton(this._id,this._card)}},{key:"setEventListeners",value:function(){var t=this;B(A(u.prototype),"setEventListeners",this).call(this),this._popup.querySelector(".popup__delete-card-button").addEventListener("click",(function(){t.delete()}))}}])&&R(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(f),V=document.querySelector(".profile__edit-button"),F=document.querySelector(".profile__add-button"),N=document.querySelector(".profile__avatar-pencil"),J=document.querySelector(".popup__edit-form"),H=document.querySelector(".popup__add-form"),z=document.querySelector(".popup__avatar-form"),M=document.querySelector("#name"),G=document.querySelector("#vocation"),K=new i(T,H),Q=new i(T,J),W=new i(T,z),X=new C({url:"https://nomoreparties.co/v1/cohort-60",headers:{authorization:"dacb1343-5ee5-4c35-990d-5bf7b2f7cc79","Content-Type":"application/json"}}),Y=new P({nameSelector:".profile__name",vocationSelector:".profile__vocation",avatarSelector:".profile__avatar"}),Z=new a({renderer:function(t){var e=at(t.name,t.link,t.likes,t._id,t.owner._id,D);Z.addItem(e)}},".photo-grid");Promise.all([X.getUserInfo(),X.getCardInfo()]).then((function(t){D=t[0]._id,Y.setUserInfo(t[0]),Y.setAvatar(t[0]),Z.renderItems(t[1])})).catch((function(t){console.log(t)}));var $=new w(".popup_edit",(function(t){X.saveUserInfo(t).then((function(t){Y.setUserInfo(t),$.close()})).catch((function(t){console.log(t)})).finally((function(){$.renderLoading(!1,"Сохранить")}))})),tt=new w(".popup_add",(function(t){X.createNewCard(t).then((function(t){var e=at(t.name,t.link,t.likes,t._id,t.owner._id,D);Z.addItem(e),tt.close()})).catch((function(t){console.log(t)})).finally((function(){tt.renderLoading(!1,"Создать")}))})),et=new w(".popup_avatar",(function(t){X.setAvatar(t).then((function(t){Y.setAvatar(t),et.close()})).catch((function(t){console.log(t)})).finally((function(){et.renderLoading(!1,"Сохранить")}))})),nt=new b(".popup_full-image"),ot=new U(".popup_delete",(function(t,e){X.deleteCard(t).then((function(){ot.close(),e.removeCard()})).catch((function(t){console.log(t)}))}));function rt(t,e){X.putLike(t).then((function(t){e.updateCountLikes(t.likes.length),e.likeIsActive()})).catch((function(t){console.log(t)}))}function it(t,e){X.deleteLike(t).then((function(t){e.updateCountLikes(t.likes.length),e.likeIsInactive()})).catch((function(t){console.log(t)}))}function ut(t,e){nt.open(t,e)}function ct(t,e){ot.open(t,e)}function at(t,e,o,r,i,u){return new n(t,e,o,r,i,u,ut,ct,rt,it,"#photo-grid__element").getView()}V.addEventListener("click",(function(){var t=Y.getUserInfo();M.value=t.name,G.value=t.vocation,Q.clearErrors(),$.open()})),F.addEventListener("click",(function(){K.clearErrors(),tt.open()})),N.addEventListener("click",(function(){W.clearErrors(),et.open()})),tt.setEventListeners(),$.setEventListeners(),nt.setEventListeners(),ot.setEventListeners(),et.setEventListeners(),K.enableValidation(),Q.enableValidation(),W.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,