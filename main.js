(()=>{"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(e,n){for(var o=0;o<n.length;o++){var r=n[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,i=function(e,n){if("object"!==t(e)||null===e)return e;var o=e[Symbol.toPrimitive];if(void 0!==o){var r=o.call(e,"string");if("object"!==t(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===t(i)?i:String(i)),r)}var i}var n=function(){function t(e,n,o,r,i,u,c,l,a,s){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._title=e,this._link=n,this._likes=o,this._id=r,this._ownerId=i,this._openFullImagePopup=u,this._openDeleteCardPopup=c,this._putLikeApi=l,this._deleteLikeApi=a,this._templateSelector=s,this._content=document.querySelector(this._templateSelector).content.querySelector(".photo-grid__element"),this._myId="425d54141212510c853cf047"}var n,o;return n=t,(o=[{key:"_getTemplateCard",value:function(){return this._content.cloneNode(!0)}},{key:"_putLike",value:function(){var t=this;this._putLikeApi(this._id).then((function(e){return t._likesCount.textContent=e.likes.length})).catch((function(t){console.log(t)})),this._like.classList.add("photo-grid__like_active")}},{key:"_deleteLike",value:function(){var t=this;this._deleteLikeApi(this._id).then((function(e){return t._likesCount.textContent=e.likes.length})).catch((function(t){console.log(t)})),this._like.classList.remove("photo-grid__like_active")}},{key:"_setEventListeners",value:function(){var t=this;this._like.addEventListener("click",(function(){t._like.classList.contains("photo-grid__like_active")?t._deleteLike():t._putLike()})),this._newCard.querySelector(".photo-grid__delete-button").addEventListener("click",(function(){return t._openDeleteCardPopup(t._newCard,t._id)})),this._img.addEventListener("click",(function(){return t._openFullImagePopup(t._title,t._link)}))}},{key:"_setData",value:function(){this._newCard.querySelector(".photo-grid__title").textContent=this._title,this._img.src=this._link,this._img.alt=this._title,this._likesCount.textContent=this._likes.length}},{key:"_checkId",value:function(){var t,e=this;return this._likes.forEach((function(n){t=n._id===e._myId})),t}},{key:"getView",value:function(){return this._newCard=this._getTemplateCard(),this._img=this._newCard.querySelector(".photo-grid__photo"),this._like=this._newCard.querySelector(".photo-grid__like"),this._likesCount=this._newCard.querySelector(".photo-grid__likes-counter"),this._setEventListeners(),this._setData(),this._myId!==this._ownerId&&this._newCard.querySelector(".photo-grid__delete-button").remove(),this._checkId()&&this._like.classList.add("photo-grid__like_active"),this._newCard}}])&&e(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),t}();function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function r(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==o(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===o(i)?i:String(i)),r)}var i}var i=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._config=e,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._formElement.querySelector(this._config.buttonSelector)}var e,n;return e=t,(n=[{key:"_hideInputError",value:function(t){this._formElement.querySelector(".".concat(t.id,"-error")).textContent="",t.classList.remove(this._config.redBorderClass)}},{key:"_showInputError",value:function(t){this._formElement.querySelector(".".concat(t.id,"-error")).textContent=t.validationMessage,t.classList.add(this._config.redBorderClass)}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(t){return!t.validity.valid}))}},{key:"_disableSubmitButton",value:function(){this._buttonElement.classList.add(this._config.inactiveButtonClass),this._buttonElement.disabled=!0}},{key:"_enableSubmitButton",value:function(){this._buttonElement.classList.remove(this._config.inactiveButtonClass),this._buttonElement.disabled=!1}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._disableSubmitButton():this._enableSubmitButton()}},{key:"_setEventListeners",value:function(){var t=this;this._toggleButtonState(),this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"clearErrors",value:function(){var t=this;this._toggleButtonState(),this._inputList.forEach((function(e){t._hideInputError(e)}))}}])&&r(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function u(t){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},u(t)}function c(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==u(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==u(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===u(r)?r:String(r)),o)}var r}var l=function(){function t(e,n){var o=e.items,r=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._items=o,this._renderer=r,this._container=document.querySelector(n)}var e,n;return e=t,(n=[{key:"renderItems",value:function(){var t=this;this._items.forEach((function(e){return t._renderer(e)}))}},{key:"addItem",value:function(t){this._container.prepend(t)}}])&&c(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function a(t){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},a(t)}function s(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==a(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==a(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===a(r)?r:String(r)),o)}var r}var f=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"setEventListeners",value:function(){this._popup.querySelector(".popup__close-button").addEventListener("click",this.close.bind(this)),this._popup.querySelector(".popup__overlay").addEventListener("click",this.close.bind(this))}}])&&s(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function p(t){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},p(t)}function y(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==p(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==p(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===p(r)?r:String(r)),o)}var r}function h(){return h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var o=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=v(t)););return t}(t,e);if(o){var r=Object.getOwnPropertyDescriptor(o,e);return r.get?r.get.call(arguments.length<3?t:n):r.value}},h.apply(this,arguments)}function d(t,e){return d=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},d(t,e)}function v(t){return v=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},v(t)}var b=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&d(t,e)}(u,t);var e,n,o,r,i=(o=u,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=v(o);if(r){var n=v(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===p(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._popupImage=e._popup.querySelector(".popup__img"),e._popupImageTitle=e._popup.querySelector(".popup__img-title"),e}return e=u,(n=[{key:"open",value:function(t,e){this._popupImage.src=e,this._popupImage.alt=t,this._popupImageTitle.textContent=t,h(v(u.prototype),"open",this).call(this)}}])&&y(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(f);function _(t){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_(t)}function m(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==_(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==_(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===_(r)?r:String(r)),o)}var r}function g(){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var o=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=w(t)););return t}(t,e);if(o){var r=Object.getOwnPropertyDescriptor(o,e);return r.get?r.get.call(arguments.length<3?t:n):r.value}},g.apply(this,arguments)}function S(t,e){return S=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},S(t,e)}function w(t){return w=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},w(t)}var k=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&S(t,e)}(u,t);var e,n,o,r,i=(o=u,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=w(o);if(r){var n=w(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===_(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e,n){var o;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(o=i.call(this,t))._submit=e,o._loading=n,o._popupForm=o._popup.querySelector(".popup__form"),o._inputList=o._popupForm.querySelectorAll(".popup__input"),o}return e=u,(n=[{key:"_getInputValues",value:function(){var t={};return this._inputList.forEach((function(e){t[e.id]=e.value})),t}},{key:"setEventListeners",value:function(){var t=this;g(w(u.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(e){e.preventDefault(),t._loading(!0,t._popupForm),t._submit(t._getInputValues(),t._popupForm)}))}},{key:"close",value:function(){g(w(u.prototype),"close",this).call(this),this._popupForm.reset()}}])&&m(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(f);function E(t){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},E(t)}function j(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==E(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==E(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===E(r)?r:String(r)),o)}var r}var O=function(){function t(e){var n=e.name,o=e.vocation;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=n,this._vocation=o}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,vocation:this._vocation.textContent}}},{key:"setUserInfo",value:function(t){this._name.textContent=t.name,this._vocation.textContent=t.about}}])&&j(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function P(t){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},P(t)}function C(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==P(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==P(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===P(r)?r:String(r)),o)}var r}var L=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.url=e.url,this.headers=e.headers}var e,n;return e=t,(n=[{key:"getInfo",value:function(){return fetch(this.url,{headers:this.headers}).then(I)}},{key:"saveInfo",value:function(t){return fetch(this.url,{method:"PATCH",headers:{authorization:"dacb1343-5ee5-4c35-990d-5bf7b2f7cc79","Content-Type":"application/json"},body:JSON.stringify({name:t.name,about:t.vocation})}).then(I)}},{key:"setAvatar",value:function(t){return fetch("".concat(this.url,"/avatar"),{method:"PATCH",headers:{authorization:"dacb1343-5ee5-4c35-990d-5bf7b2f7cc79","Content-Type":"application/json"},body:JSON.stringify({avatar:t.avatar})}).then(I)}},{key:"createNewCard",value:function(t){return fetch(this.url,{method:"POST",headers:this.headers,body:JSON.stringify({name:t.title,link:t.link})}).then(I)}},{key:"deleteCard",value:function(t){return fetch("".concat(this.url,"/").concat(t),{method:"DELETE",headers:this.headers}).then(I)}},{key:"putLike",value:function(t){return fetch("".concat(this.url,"/").concat(t,"/likes"),{method:"PUT",headers:this.headers}).then(I)}},{key:"deleteLike",value:function(t){return fetch("".concat(this.url,"/").concat(t,"/likes"),{method:"DELETE",headers:this.headers}).then(I)}}])&&C(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function I(t){return t.ok?t.json():Promise.reject(new Error("Ошибка!!!"))}var T={formSelector:".popup__form",inputSelector:".popup__input",buttonSelector:".popup__save-button",inactiveButtonClass:"popup__inactive-button",redBorderClass:"popup__input_red-broder"};function q(t){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},q(t)}function R(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==q(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==q(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===q(r)?r:String(r)),o)}var r}function B(){return B="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var o=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=D(t)););return t}(t,e);if(o){var r=Object.getOwnPropertyDescriptor(o,e);return r.get?r.get.call(arguments.length<3?t:n):r.value}},B.apply(this,arguments)}function x(t,e){return x=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},x(t,e)}function D(t){return D=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},D(t)}var A,V=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&x(t,e)}(u,t);var e,n,o,r,i=(o=u,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=D(o);if(r){var n=D(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===q(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._handleButton=e,n}return e=u,(n=[{key:"open",value:function(t,e){this._card=t,this._id=e,B(D(u.prototype),"open",this).call(this)}},{key:"delete",value:function(){this._handleButton(this._id),this._card.remove()}},{key:"setEventListeners",value:function(){var t=this;B(D(u.prototype),"setEventListeners",this).call(this),this._popup.querySelector(".popup__delete-card-button").addEventListener("click",(function(){t.close(),t.delete()}))}}])&&R(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(f),F=document.querySelector(".profile__edit-button"),N=document.querySelector(".profile__add-button"),U=document.querySelector(".profile__avatar-pencil"),z=document.querySelector(".profile__name"),J=document.querySelector(".profile__vocation"),H=document.querySelector(".popup__edit-form"),M=document.querySelector(".popup__add-form"),G=document.querySelector(".popup__avatar-form"),K=document.querySelector("#name"),Q=document.querySelector("#vocation"),W=document.querySelector(".profile__avatar"),X=new i(T,M),Y=new i(T,H),Z=new i(T,G),$=new L({url:"https://nomoreparties.co/v1/cohort-60/users/me",headers:{authorization:"dacb1343-5ee5-4c35-990d-5bf7b2f7cc79"}}),tt=new L({url:"https://mesto.nomoreparties.co/v1/cohort-60/cards",headers:{authorization:"dacb1343-5ee5-4c35-990d-5bf7b2f7cc79","Content-Type":"application/json"}}),et=new O({name:z,vocation:J});tt.getInfo().then((function(t){(A=new l({items:t,renderer:function(t){var e=pt(t.name,t.link,t.likes,t._id,t.owner._id);A.addItem(e.getView())}},".photo-grid")).renderItems()})).catch((function(t){console.log(t)})),$.getInfo().then((function(t){et.setUserInfo(t),W.src=t.avatar})).catch((function(t){console.log(t)}));var nt=new k(".popup_edit",(function(t,e){$.saveInfo(t).then((function(t){et.setUserInfo(t)})).catch((function(t){console.log(t)})).finally((function(){ct(!1,e),nt.close()}))}),ct),ot=new k(".popup_add",(function(t,e){tt.createNewCard(t).then((function(t){var e=pt(t.name,t.link,t.likes,t._id,t.owner._id);A.addItem(e.getView())})).catch((function(t){console.log(t)})).finally((function(){ct(!1,e),ot.close()}))}),ct),rt=new k(".popup_avatar",(function(t,e){$.setAvatar(t).then((function(t){W.src=t.avatar})).catch((function(t){console.log(t)})).finally((function(){ct(!1,e),rt.close()}))}),ct),it=new b(".popup_full-image"),ut=new V(".popup_delete",(function(t){tt.deleteCard(t)}));function ct(t,e){e.querySelector(".popup__save-button").textContent=t?"Сохранение...":"Создать"}function lt(t){return tt.putLike(t)}function at(t){return tt.deleteLike(t)}function st(t,e){it.open(t,e)}function ft(t,e){ut.open(t,e)}function pt(t,e,o,r,i){return new n(t,e,o,r,i,st,ft,lt,at,"#photo-grid__element")}F.addEventListener("click",(function(){var t=et.getUserInfo();K.value=t.name,Q.value=t.vocation,Y.clearErrors(),nt.open()})),N.addEventListener("click",(function(){X.clearErrors(),ot.open()})),U.addEventListener("click",(function(){rt.open()})),ot.setEventListeners(),nt.setEventListeners(),it.setEventListeners(),ut.setEventListeners(),rt.setEventListeners(),X.enableValidation(),Y.enableValidation(),Z.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,